// swiftlint:disable file_length

{% for type in types.classes %}

// MARK: - {{ type.name }} NSCopying

extension ModelsR4.{{ type.name }}{% if type.supertype %} {% else %}: NSCopying {% endif %}{

    {% if type.supertype %}override {% endif %}public func copy(with zone: NSZone? = nil) -> Any {
        {% if type.supertype %}
        guard let resource = super.copy() as? ModelsR4.{{ type.name }} else {
            return self
        }
        {% else %}
        let resource = ModelsR4.{{ type.name }}()
        {% endif %}

        {% for variable in type.variables where not variable.isStatic and not variable.name == "description" %}
        resource.{{ variable.name }} = self.{{ variable.name }}{% if variable.type.kind == "class" or (variable.typeName.isArray and variable.typeName.array.elementType.isOptional) %}{% if variable.isOptional %}?{% endif %}{% if variable.typeName.isArray %}.map { $0.copy() } {% else %}.copy(){% endif %} as{% if variable.isOptional %}?{% else %}!{% endif %} {{ variable.typeName.unwrappedTypeName }}{% endif %}
        {% endfor %}

        return resource
    }
}
{% endfor %}
