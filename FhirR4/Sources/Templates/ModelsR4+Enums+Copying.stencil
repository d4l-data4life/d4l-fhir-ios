{% macro addOptionalMark variable %}{% if variable.isOptional %}?{% endif %}{% endmacro %}
{% macro addOptionalCast variable %} as{% if variable.isOptional %}?{% else %}!{% endif %} {{ variable.typeName.unwrappedTypeName }}{% endmacro %}
// Copyright (c) 2020 D4L data4life gGmbH
// All rights reserved.

// D4L owns all legal rights, title and interest in and to the Software Development Kit ("SDK"),
// including any intellectual property rights that subsist in the SDK.

// The SDK and its documentation may be accessed and used for viewing/review purposes only.
// Any usage of the SDK for other purposes, including usage for the development of
// applications/third-party applications shall require the conclusion of a license agreement
// between you and D4L.

// If you are interested in licensing the SDK for your own applications/third-party
// applications and/or if youâ€™d like to contribute to the development of the SDK, please
// contact D4L by email to help@data4life.care.

// swiftlint:disable file_length

// MARK: Enums
{% for enum in types.enums where enum.hasAssociatedValues %}
// MARK: {{ enum.name }}
extension ModelsR4.{{ enum.name }} {

    public func copy() -> Any {
        switch self {
        {% for case in enum.cases %}
        case .{{ case.name }}{% if case.hasAssociatedValues %}({% for value in case.associatedValues %}let value{{ forloop.counter }}{% if not forloop.last %},{% endif %}{% endfor %}){% endif %}:
            return ModelsR4.{{ enum.name }}.{{ case.name }}({% for value in case.associatedValues %}value{{ forloop.counter }}{% if value.type.kind == "class" or ( value.typeName.isArray and value.typeName.array.elementType.kind == "class" ) or ( value.type.kind == "enum" and value.typeName.enum.hasAssociatedValues ) %}{% call addOptionalMark value %}{% if value.typeName.isArray %}.compactMap { $0.copy() as? {{ value.typeName.array.elementType.name }} } {% else %}.copy(){% call addOptionalCast value %}{% endif %}{% endif %}{% if not forloop.last %},{% endif %}{% endfor %})
        {% endfor %}
        }
    }
}

{% endfor %}
